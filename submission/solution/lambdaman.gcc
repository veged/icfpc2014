LDC 0 ; init_ctx=0
LDC 0 ; init_ctx=1
LDC 0 ; init_ctx=2
LDC 0 ; init_ctx=3
LDC 0 ; init_ctx=4
LDC 0 ; init_ctx=5
LDC 0 ; init_ctx=6
LDC 0 ; init_ctx=7
LDC 0 ; init_ctx=8
LDC 0 ; init_ctx=9
LDC 0 ; init_ctx=10
LDC 0 ; init_ctx=11
LDC 0 ; init_ctx=12
LDC 0 ; init_ctx=13
LDC 0 ; init_ctx=14
LDC 0 ; init_ctx=15
LDC 0 ; init_ctx=16
LDC 0 ; init_ctx=17
LDC 0 ; init_ctx=18
LDC 0 ; init_ctx=19
LDC 0 ; init_ctx=20
LDC 0 ; init_ctx=21
LDC 0 ; init_ctx=22
LDC 0 ; init_ctx=23
LDC 0 ; init_ctx=24
LDC 0 ; init_ctx=25
LDC 0 ; init_ctx=26
LDC 0 ; init_ctx=27
LDC 0 ; init_ctx=28
LDC 0 ; init_ctx=29
LDC 0 ; init_ctx=30
LDC 0 ; init_ctx=31
LDC 0 ; init_ctx=32
LDC 0 ; init_ctx=33
LDC 0 ; init_ctx=34
LDC 0 ; init_ctx=35
LDC 0 ; init_ctx=36
LDC 0 ; init_ctx=37
LDC 0 ; init_ctx=38
LDC 0 ; init_ctx=39
LDC 0 ; init_ctx=40
LDC 0 ; init_ctx=41
LDC 0 ; init_ctx=42
LDC 0 ; init_ctx=43
LDC 0 ; init_ctx=44
LDC 0 ; init_ctx=45
LDC 0 ; init_ctx=46
LDC 0 ; init_ctx=47
LDC 0 ; init_ctx=48
LDC 0 ; init_ctx=49
LDC 0 ; init_ctx=50
LDC 0 ; init_ctx=51
LDC 0 ; init_ctx=52
LDF 56
AP 53
RTN
LDF 186 ; (js: `function listGet(...`) (js: `if (module) { // ...`)
ST 0 0
LDF 228 ; (js: `function listSet(...`)
ST 0 1
LDF 327 ; (js: `function listLeng...`)
ST 0 2
LDF 330 ; (js: `function slowList...`)
ST 0 3
LDF 352 ; (js: `function listFrom...`)
ST 0 4
LDF 372 ; (js: `function listIter...`)
ST 0 5
LDF 388 ; (js: `function matrixSe...`)
ST 0 6
LDF 404 ; (js: `function matrixGe...`)
ST 0 7
LDF 414 ; (js: `function matrixIt...`)
ST 0 8
LDF 427 ; (js: `function genList(...`)
ST 0 9
LDF 439 ; (js: `function genMatri...`)
ST 0 10
LDF 450 ; (js: `function shiftDir...`)
ST 0 11
LDF 499 ; (js: `function heapPop(...`)
ST 0 12
LDF 615 ; (js: `function heapSize...`)
ST 0 13
LDF 624 ; (js: `function heapPush...`)
ST 0 14
LDF 710 ; (js: `function heapSort...`)
ST 0 15
LDF 758 ; (js: `function flatRow(...`)
ST 0 16
LDF 773 ; (js: `function flatMatr...`)
ST 0 17
LDF 785 ; (js: `function flatAndS...`)
ST 0 18
LDF 797 ; (js: `function run(map,...`)
ST 0 19
LDF 798 ; (js: `function id(x, i)...`)
ST 0 20
LDF 800 ; (js: `function convertR...`)
ST 0 21
LDF 811 ; (js: `function matrixFr...`)
ST 0 22
LDF 816 ; (js: `function tplGet(t...`)
ST 0 23
LDF 850 ; (js: `function tplGette...`)
ST 0 24
LDF 858 ; (js: `function mod(n, d...`)
ST 0 25
LDF 866 ; (js: `function rand() {...`)
ST 0 26
LDF 879 ; (js: `function slowList...`)
ST 0 27
LDF 895 ; (js: `function opposite...`)
ST 0 28
LDF 909 ; (js: `function convertM...`)
ST 0 29
LDF 923 ; (js: `function genZero(...`)
ST 0 30
LDF 925 ; (js: `function setMazeC...`)
ST 0 31
LDF 1121 ; (js: `function canGo(po...`)
ST 0 32
LDF 1160 ; (js: `function setMaze(...`)
ST 0 33
LDF 1247 ; (js: `function step(aiS...`)
ST 0 34
LD 1 0 ; (js: `var globalMap = g...`)
CAR
ST 0 35
LDC 42 ; literal (js: `var _next = 42;`)
ST 0 43
LDC 0 ; literal (js: `var ghostsStartin...`)
ST 0 44
LD 0 35 ; (js: `globalMap = listF...`)
LD 0 29
LD 0 4
AP 2
ST 0 35
LD 0 44 ; (js: `ghostsStartingPos...`)
LD 0 20
LD 0 4
AP 2
ST 0 44
LD 0 35 ; (js: `var Y = listLengt...`)
LD 0 2
AP 1
ST 0 45
LD 0 35 ; (js: `var X = listLengt...`)
LDC 0 ; literal
LD 0 0
AP 2
LD 0 2
AP 1
ST 0 46
LD 0 46 ; (js: `var emptySmell = ...`)
LD 0 45
LD 0 30
LD 0 10
AP 3
ST 0 47
LD 0 47 ; (js: `var emptyMaze = e...`)
ST 0 48
LD 0 47 ; (js: `var emptyPaths = ...`)
ST 0 49
LD 0 35 ; (js: `var map = globalMap;`)
ST 0 50
LDC 4 ; literal (js: `var _4FastList = ...`)
LDC 0 ; literal
LDC 0 ; literal
CONS
LDC 0 ; literal
LDC 0 ; literal
CONS
CONS
CONS
ST 0 51
LD 0 48 ; (js: `var maze = emptyM...`)
ST 0 52
LD 0 33 ; (js: `setMaze();`)
AP 0
ATOM
TSEL 182 182 ; cleanup
LDC 0 ; literal (js: `[0, step];`)
LD 0 34
CONS
RTN
LD 0 0 ; (js: `listGet_size = li...`) (js: `{    listGet_size...`)
CAR
ST 1 36
LD 0 0 ; (js: `list = list[1];`)
CDR
ST 0 0
LDC 1 ; (js: `while (listGet_si...`)
LD 1 36
LDC 1 ; literal
CEQ
SUB
TSEL 198 226 ; while test
LD 1 36 ; (js: `listGet_m = (list...`) (js: `{        listGet_...`)
LDC 2 ; literal
DIV
ST 1 37
LD 1 37 ; (js: `if (n < listGet_m...`)
LD 0 1
CGT
TSEL 206 213 ; if test
LD 0 0 ; (js: `list = list[0];`) (js: `{            list...`)
CAR
ST 0 0
LD 1 37 ; (js: `listGet_size = li...`)
ST 1 36
LDC 0 ; if-cons-jump
TSEL 224 224
LD 0 0 ; (js: `list = list[1];`) (js: `{            list...`)
CDR
ST 0 0
LD 1 36 ; (js: `listGet_size = li...`)
LD 1 37
SUB
ST 1 36
LD 0 1 ; (js: `n = n - listGet_m;`)
LD 1 37
SUB
ST 0 1
LDC 0
TSEL 192 192
LD 0 0 ; (js: `return list;`)
RTN
LDC 0 ; init_ctx=0
LDC 0 ; init_ctx=1
LDC 0 ; init_ctx=2
LDC 0 ; init_ctx=3
LDC 0 ; init_ctx=4
LDC 0 ; init_ctx=5
LDF 237
AP 6
RTN
LD 1 0 ; (js: `var listSet_size ...`) (js: `{    var listSet_...`)
CAR
ST 0 0
LD 0 0 ; (js: `var listSet_s = l...`)
ST 0 1
LD 1 0 ; (js: `list = list[1];`)
CDR
ST 1 0
LDC 0 ; literal (js: `var listSet_stack...`)
ST 0 2
LD 0 1 ; (js: `while (listSet_s ...`)
LDC 1 ; literal
CGT
TSEL 251 293 ; while test
LD 0 1 ; (js: `var listSet_m = (...`) (js: `{        var list...`)
LDC 2 ; literal
DIV
ST 0 3
LD 0 3 ; (js: `if (n < listSet_m...`)
LD 1 1
CGT
TSEL 259 273 ; if test
LD 0 3 ; (js: `listSet_s = listS...`) (js: `{            list...`)
ST 0 1
LDC 1 ; literal (js: `listSet_stack = [...`)
LD 1 0
CDR
CONS
LD 0 2
CONS
ST 0 2
LD 1 0 ; (js: `list = list[0];`)
CAR
ST 1 0
LDC 0 ; if-cons-jump
TSEL 291 291
LD 0 1 ; (js: `listSet_s = listS...`) (js: `{            list...`)
LD 0 3
SUB
ST 0 1
LD 1 1 ; (js: `n = n - listSet_m;`)
LD 0 3
SUB
ST 1 1
LDC 0 ; literal (js: `listSet_stack = [...`)
LD 1 0
CAR
CONS
LD 0 2
CONS
ST 0 2
LD 1 0 ; (js: `list = list[1];`)
CDR
ST 1 0
LDC 0
TSEL 247 247
LD 1 2 ; (js: `var listSet_res = x;`)
ST 0 4
LD 0 2 ; (js: `while (typeof lis...`)
ATOM
LDC 0
CEQ
TSEL 300 323 ; while test
LD 0 2 ; (js: `var head = listSe...`) (js: `{        var head...`)
CAR
ST 0 5
LD 0 5 ; (js: `if (head[0]) {   ...`)
CAR
TSEL 306 313 ; if test
LD 0 4 ; (js: `listSet_res = [li...`) (js: `{            list...`)
LD 0 5
CDR
CONS
ST 0 4
LDC 0 ; if-cons-jump
TSEL 318 318
LD 0 5 ; (js: `listSet_res = [he...`) (js: `{            list...`)
CDR
LD 0 4
CONS
ST 0 4
LD 0 2 ; (js: `listSet_stack = l...`)
CDR
ST 0 2
LDC 0
TSEL 295 295
LD 0 0 ; (js: `return [listSet_s...`)
LD 0 4
CONS
RTN
LD 0 0 ; (js: `return list[0];`) (js: `{    return list[...`)
CAR
RTN
LDC 0 ; init_ctx=0
LDF 334
AP 1
RTN
LDC 0 ; literal (js: `var n = 0;`) (js: `{    var n = 0;  ...`)
ST 0 0
LD 1 0 ; (js: `while (typeof lis...`)
ATOM
LDC 0
CEQ
TSEL 341 350 ; while test
LD 1 0 ; (js: `list = list[1];`) (js: `{        list = l...`)
CDR
ST 1 0
LD 0 0 ; (js: `n = n + 1;`)
LDC 1 ; literal
ADD
ST 0 0
LDC 0
TSEL 336 336
LD 0 0 ; (js: `return n;`)
RTN
LDC 0 ; init_ctx=0
LDC 0 ; init_ctx=1
LDF 357
AP 2
RTN
LDF 1402 ; (js: `function _listFro...`) (js: `{    function _li...`)
ST 0 0
LD 1 0 ; (js: `var len = slowLis...`)
LD 2 3
AP 1
ST 0 1
LD 0 1 ; (js: `return [len, _lis...`)
LD 1 0
LD 0 1
LDC 0 ; literal
LD 0 0
AP 3
CAR
CONS
RTN
LDC 0 ; init_ctx=0
LDF 376
AP 1
RTN
LDF 1451 ; (js: `function _listIte...`) (js: `{    var i = 0;  ...`)
ST 0 0
LD 1 0 ; (js: `_listIterate(list...`)
CDR
LD 1 0
CAR
LDC 0 ; literal
LD 0 0
AP 3
ATOM
TSEL 387 387 ; cleanup
RTN
LD 0 0 ; (js: `return listSet(mx...`) (js: `{    return listS...`)
LD 0 1
CDR
LD 0 0
LD 0 1
CDR
LD 1 0
AP 2
LD 0 1
CAR
LD 0 2
LD 1 1
AP 3
LD 1 1
AP 3
RTN
LD 0 0 ; (js: `return listGet(li...`) (js: `{    return listG...`)
LD 0 1
CDR
LD 1 0
AP 2
LD 0 1
CAR
LD 1 0
AP 2
RTN
LDC 0 ; init_ctx=0
LDF 418
AP 1
RTN
LDF 1492 ; (js: `function rowItera...`) (js: `{    function row...`)
ST 0 0
LD 1 0 ; (js: `listIterate(mx, r...`)
LD 0 0
LD 2 5
AP 2
ATOM
TSEL 426 426 ; cleanup
RTN
LDC 0 ; init_ctx=0
LDF 431
AP 1
RTN
LDF 1505 ; (js: `function _genList...`) (js: `{    function _ge...`)
ST 0 0
LD 1 0 ; (js: `return [n, _genLi...`)
LD 1 0
LD 0 0
AP 1
CONS
RTN
LDC 0 ; init_ctx=0
LDF 443
AP 1
RTN
LDF 1530 ; (js: `function genListF...`) (js: `{    function gen...`)
ST 0 0
LD 1 1 ; (js: `return genList(Y,...`)
LD 0 0
LD 2 9
AP 2
RTN
LD 0 1 ; (js: `if ((d / 2) | 0) ...`) (js: `{    if ((d / 2) ...`)
LDC 2 ; literal
DIV
TSEL 454 478 ; if test
LD 0 1 ; (js: `if (d === 2) { //...`) (js: `{        if (d ==...`)
LDC 2 ; literal
CEQ
TSEL 458 468 ; if test
LD 0 0 ; (js: `return [pos[0], p...`) (js: `{ //down         ...`)
CAR
LD 0 0
CDR
LDC 1 ; literal
ADD
CONS
RTN
LDC 0 ; if-cons-jump
TSEL 476 476
LD 0 0 ; (js: `return [pos[0] - ...`) (js: `{ //left         ...`)
CAR
LDC 1 ; literal
SUB
LD 0 0
CDR
CONS
RTN
LDC 0 ; if-cons-jump
TSEL 498 498
LD 0 1 ; (js: `if (d) { //right ...`) (js: `{        if (d) {...`)
TSEL 480 490 ; if test
LD 0 0 ; (js: `return [pos[0] + ...`) (js: `{ //right        ...`)
CAR
LDC 1 ; literal
ADD
LD 0 0
CDR
CONS
RTN
LDC 0 ; if-cons-jump
TSEL 498 498
LD 0 0 ; (js: `return [pos[0], p...`) (js: `{ //up           ...`)
CAR
LD 0 0
CDR
LDC 1 ; literal
SUB
CONS
RTN
RTN
LDC 0 ; init_ctx=0
LDC 0 ; init_ctx=1
LDC 0 ; init_ctx=2
LDC 0 ; init_ctx=3
LDC 0 ; init_ctx=4
LDC 0 ; init_ctx=5
LDC 0 ; init_ctx=6
LDC 0 ; init_ctx=7
LDF 510
AP 8
RTN
LD 1 0 ; (js: `var val = heap[0];`) (js: `{    var val = he...`)
CAR
ST 0 0
LD 0 0 ; (js: `var x = val[0];`)
CAR
ST 0 1
LD 0 0 ; (js: `var size = val[1];`)
CDR
ST 0 2
LD 1 0 ; (js: `var ptr = heap[1];`)
CDR
ST 0 3
LD 0 3 ; (js: `if (typeof ptr[0]...`)
CAR
ATOM
TSEL 526 540 ; if test
LD 0 3 ; (js: `if (typeof ptr[1]...`) (js: `{        if (type...`)
CDR
ATOM
TSEL 530 536 ; if test
LD 0 1 ; (js: `return [x, 0];`) (js: `{            retu...`)
LDC 0 ; literal
CONS
RTN
LDC 0 ; if-cons-jump
TSEL 538 538
LDC 1 ; literal (js: `p = 1;`) (js: `{            p = ...`)
ST 0 4
LDC 0 ; if-cons-jump
TSEL 570 570
LD 0 3 ; (js: `if (typeof ptr[1]...`) (js: `{        if (type...`)
CDR
ATOM
TSEL 544 548 ; if test
LDC 0 ; literal (js: `p = 0;`) (js: `{            p = ...`)
ST 0 4
LDC 0 ; if-cons-jump
TSEL 570 570
LD 0 3 ; (js: `var x0 = ptr[0][0...`) (js: `{            var ...`)
CAR
CAR
CAR
ST 0 6
LD 0 3 ; (js: `var x1 = ptr[1][0...`)
CDR
CAR
CAR
ST 0 7
LD 0 7 ; (js: `if (x0[0] < x1[0]...`)
CAR
LD 0 6
CAR
CGT
TSEL 564 568 ; if test
LDC 0 ; literal (js: `p = 0;`) (js: `{                ...`)
ST 0 4
LDC 0 ; if-cons-jump
TSEL 570 570
LDC 1 ; literal (js: `p = 1;`) (js: `{                ...`)
ST 0 4
LD 0 4 ; (js: `if (p) {        r...`)
TSEL 572 594 ; if test
LD 0 3 ; (js: `res = heapPop(ptr...`) (js: `{        res = he...`)
CDR
LD 2 12
AP 1
ST 0 5
LD 0 1 ; (js: `return [x, [[res[...`)
LD 0 5
CAR
LD 0 2
LDC 1 ; literal
SUB
CONS
LD 0 3
CAR
LD 0 5
CDR
CONS
CONS
CONS
RTN
LDC 0 ; if-cons-jump
TSEL 614 614
LD 0 3 ; (js: `res = heapPop(ptr...`) (js: `{        res = he...`)
CAR
LD 2 12
AP 1
ST 0 5
LD 0 1 ; (js: `return [x, [[res[...`)
LD 0 5
CAR
LD 0 2
LDC 1 ; literal
SUB
CONS
LD 0 5
CDR
LD 0 3
CDR
CONS
CONS
CONS
RTN
RTN
LD 0 0 ; (js: `if (typeof heap =...`) (js: `{    if (typeof h...`)
ATOM
TSEL 618 620 ; if test
LDC 0 ; literal (js: `return 0;`)
RTN
LD 0 0 ; (js: `return heap[0][1];`)
CAR
CDR
RTN
LDC 0 ; init_ctx=0
LDC 0 ; init_ctx=1
LDC 0 ; init_ctx=2
LDC 0 ; init_ctx=3
LDC 0 ; init_ctx=4
LDF 632
AP 5
RTN
LD 1 0 ; (js: `if (typeof heap =...`) (js: `{    if (typeof h...`)
ATOM
TSEL 635 643 ; if test
LD 1 1 ; (js: `return [[x, 1], [...`) (js: `{        return [...`)
LDC 1 ; literal
CONS
LDC 0 ; literal
LDC 0 ; literal
CONS
CONS
RTN
LD 1 0 ; (js: `var val = heap[0];`)
CAR
ST 0 0
LD 0 0 ; (js: `var y = val[0];`)
CAR
ST 0 1
LD 0 0 ; (js: `var size = val[1];`)
CDR
ST 0 2
LD 1 0 ; (js: `var ptr = heap[1];`)
CDR
ST 0 3
LD 0 1 ; (js: `if (x[0] < y[0]) ...`)
CAR
LD 1 1
CAR
CGT
TSEL 661 667 ; if test
LD 1 1 ; (js: `var z = x;`) (js: `{        var z = ...`)
ST 0 4
LD 0 1 ; (js: `x = y;`)
ST 1 1
LD 0 4 ; (js: `y = z;`)
ST 0 1
LD 0 3 ; (js: `if (heapSize(ptr[...`)
CAR
LD 2 13
AP 1
LD 0 3
CDR
LD 2 13
AP 1
CGT
TSEL 677 694 ; if test
LD 0 1 ; (js: `return [[y, size ...`) (js: `{        return [...`)
LD 0 2
LDC 1 ; literal
ADD
CONS
LD 0 3
CAR
LD 0 3
CDR
LD 1 1
LD 2 14
AP 2
CONS
CONS
RTN
LDC 0 ; if-cons-jump
TSEL 709 709
LD 0 1 ; (js: `return [[y, size ...`) (js: `{        return [...`)
LD 0 2
LDC 1 ; literal
ADD
CONS
LD 0 3
CAR
LD 1 1
LD 2 14
AP 2
LD 0 3
CDR
CONS
CONS
RTN
RTN
LDC 0 ; init_ctx=0
LDC 0 ; init_ctx=1
LDC 0 ; init_ctx=2
LDF 716
AP 3
RTN
LDC 0 ; literal (js: `var heap = 0;`) (js: `{    // descendin...`)
ST 0 0
LD 1 0 ; (js: `while (typeof arr...`)
ATOM
LDC 0
CEQ
TSEL 723 734 ; while test
LD 0 0 ; (js: `heap = heapPush(h...`) (js: `{        heap = h...`)
LD 1 0
CAR
LD 2 14
AP 2
ST 0 0
LD 1 0 ; (js: `arr = arr[1];`)
CDR
ST 1 0
LDC 0
TSEL 718 718
LDC 0 ; literal (js: `var res = 0;`)
ST 0 1
LD 0 0 ; (js: `while (heapSize(h...`)
LD 2 13
AP 1
LDC 0 ; literal
CGT
TSEL 742 756 ; while test
LD 0 0 ; (js: `var pop = heapPop...`) (js: `{        var pop ...`)
LD 2 12
AP 1
ST 0 2
LD 0 2 ; (js: `res = [pop[0], res];`)
CAR
LD 0 1
CONS
ST 0 1
LD 0 2 ; (js: `heap = pop[1];`)
CDR
ST 0 0
LDC 0
TSEL 736 736
LD 0 1 ; (js: `return res;`)
RTN
LDC 0 ; init_ctx=0
LDF 762
AP 1
RTN
LDF 1535 ; (js: `function _flatRow...`) (js: `{    function _fl...`)
ST 0 0
LD 1 0 ; (js: `return _flatRow(r...`)
CDR
LDC 0 ; literal
LD 1 0
CAR
LD 1 2
LD 0 0
AP 4
RTN
LDC 0 ; init_ctx=0
LDF 777
AP 1
RTN
LDF 1573 ; (js: `function processR...`) (js: `{    function pro...`)
ST 0 0
LD 1 0 ; (js: `return flatRow(mx...`)
LD 0 0
LDC 0 ; literal
LD 2 16
AP 3
RTN
LDC 0 ; init_ctx=0
LDF 789
AP 1
RTN
LD 1 0 ; (js: `var val = flatMat...`) (js: `{    var val = fl...`)
LD 2 17
AP 1
ST 0 0
LD 0 0 ; (js: `return heapSort(v...`)
LD 2 15
AP 1
RTN
RTN
LD 0 0 ; (js: `return x;`) (js: `{    return x;}`)
RTN
LDC 0 ; init_ctx=0
LDF 804
AP 1
RTN
LD 1 0 ; (js: `var val = listFro...`) (js: `{    var val = li...`)
LD 2 20
LD 2 4
AP 2
ST 0 0
LD 0 0 ; (js: `return val;`)
RTN
LD 0 0 ; (js: `return listFromSl...`) (js: `{    return listF...`)
LD 1 21
LD 1 4
AP 2
RTN
LD 0 2 ; (js: `if(i === 0) {    ...`) (js: `{    if(i === 0) ...`)
LDC 0 ; literal
CEQ
TSEL 820 825 ; if test
LD 0 0 ; (js: `return tpl[0];`) (js: `{        return t...`)
CAR
RTN
LDC 0 ; if-cons-jump
TSEL 849 849
LD 0 2 ; (js: `if(i === 1 && len...`)
LDC 1 ; literal
CEQ
LD 0 1
LDC 2 ; literal
CEQ
MUL
TSEL 833 838 ; if test
LD 0 0 ; (js: `return tpl[1];`) (js: `{        return t...`)
CDR
RTN
LDC 0 ; if-cons-jump
TSEL 849 849
LD 0 0 ; (js: `return tplGet(tpl...`) (js: `{        return t...`)
CDR
LD 0 1
LDC 1 ; literal
SUB
LD 0 2
LDC 1 ; literal
SUB
LD 1 23
AP 3
RTN
RTN
LDC 0 ; init_ctx=0
LDF 854
AP 1
RTN
LDF 1585 ; (js: `function getter(i...`) (js: `{    function get...`)
ST 0 0
LD 0 0 ; (js: `return getter;`)
RTN
LD 0 0 ; (js: `return n - ((n / ...`) (js: `{    return n - (...`)
LD 0 0
LD 0 1
DIV
LD 0 1
MUL
SUB
RTN
LD 1 43 ; (js: `_next = (_next * ...`) (js: `{    _next = (_ne...`)
LDC 1103515245 ; literal
MUL
LDC 12345 ; literal
ADD
ST 1 43
LD 1 43 ; (js: `return mod(((_nex...`)
LDC 65536 ; literal
DIV
LDC 32768 ; literal
LD 1 25
AP 2
RTN
LD 0 0 ; (js: `if (typeof list =...`) (js: `{    if (typeof l...`)
ATOM
TSEL 882 884 ; if test
LD 0 0 ; (js: `return list;`)
RTN
LD 0 0 ; (js: `return [f(list[0]...`)
CAR
LD 0 1
AP 1
LD 0 0
CDR
LD 0 1
LD 1 27
AP 2
CONS
RTN
LD 0 0 ; (js: `d = d + 2;`) (js: `{    d = d + 2;  ...`)
LDC 2 ; literal
ADD
ST 0 0
LD 0 0 ; (js: `if (d >= 4)      ...`)
LDC 4 ; literal
CGTE
TSEL 903 907 ; if test
LD 0 0 ; (js: `d = d - 4;`)
LDC 4 ; literal
SUB
ST 0 0
LD 0 0 ; (js: `return d;`)
RTN
LDC 0 ; init_ctx=0
LDC 0 ; init_ctx=1
LDF 914
AP 2
RTN
LDF 1591 ; (js: `function convertM...`) (js: `{function convert...`)
ST 0 0
LD 1 0 ; (js: `var val = listFro...`)
LD 0 0
LD 2 4
AP 2
ST 0 1
LD 0 1 ; (js: `return val;`)
RTN
LDC 0 ; literal (js: `return 0;`) (js: `{    return 0;}`)
RTN
LDC 0 ; init_ctx=0
LDC 0 ; init_ctx=1
LDC 0 ; init_ctx=2
LDC 0 ; init_ctx=3
LDC 0 ; init_ctx=4
LDF 933
AP 5
RTN
LD 2 52 ; (js: `var mz = matrixGe...`) (js: `{    var mz = mat...`)
LD 1 0
LD 2 7
AP 2
ST 0 0
LDC 0 ; literal (js: `var ds = 0;`)
ST 0 1
LD 0 0 ; (js: `if (typeof mz ===...`)
ATOM
LDC 0
CEQ
TSEL 945 950 ; if test
LD 0 0 ; (js: `ds = listGet(mz, d);`) (js: `{        ds = lis...`)
LD 1 1
LD 2 0
AP 2
ST 0 1
LD 1 1 ; (js: `var dl = d + 1;`)
LDC 1 ; literal
ADD
ST 0 2
LD 0 2 ; (js: `if (dl === 4)    ...`)
LDC 4 ; literal
CEQ
TSEL 958 960 ; if test
LDC 0 ; literal (js: `dl = 0;`)
ST 0 2
LD 1 1 ; (js: `var dr = d - 1;`)
LDC 1 ; literal
SUB
ST 0 3
LD 0 3 ; (js: `if (dr === -1)   ...`)
LDC 0
LDC 1 ; literal
SUB
CEQ
TSEL 970 972 ; if test
LDC 3 ; literal (js: `dr = 3;`)
ST 0 3
LD 1 1 ; (js: `var db = opposite...`)
LD 2 28
AP 1
ST 0 4
LD 2 50 ; (js: `if (matrixGet(map...`)
LD 1 0
LD 1 1
LD 2 11
AP 2
LD 2 7
AP 2
LDC 0 ; literal
CEQ
TSEL 986 1042 ; if test
LD 2 50 ; (js: `if (matrixGet(map...`) (js: `{ // wall        ...`)
LD 1 0
LD 0 2
LD 2 11
AP 2
LD 2 7
AP 2
LDC 0 ; literal
CEQ
TSEL 996 1018 ; if test
LD 2 50 ; (js: `if (matrixGet(map...`) (js: `{            if (...`)
LD 1 0
LD 0 3
LD 2 11
AP 2
LD 2 7
AP 2
LDC 0 ; literal
CEQ
TSEL 1006 1012 ; if test
LD 0 4 ; (js: `ds = [db, 0];`) (js: `{                ...`)
LDC 0 ; literal
CONS
ST 0 1
LDC 0 ; if-cons-jump
TSEL 1016 1016
LD 0 3 ; (js: `ds = [dr, 0];`) (js: `{                ...`)
LDC 0 ; literal
CONS
ST 0 1
LDC 0 ; if-cons-jump
TSEL 1040 1040
LD 2 50 ; (js: `if (matrixGet(map...`) (js: `{            if (...`)
LD 1 0
LD 0 3
LD 2 11
AP 2
LD 2 7
AP 2
LDC 0 ; literal
CEQ
TSEL 1028 1034 ; if test
LD 0 2 ; (js: `ds = [dl, 0];`) (js: `{                ...`)
LDC 0 ; literal
CONS
ST 0 1
LDC 0 ; if-cons-jump
TSEL 1040 1040
LD 0 3 ; (js: `ds = [dr, [dl, 0]];`) (js: `{                ...`)
LD 0 2
LDC 0 ; literal
CONS
CONS
ST 0 1
LDC 0 ; if-cons-jump
TSEL 1102 1102
LD 2 50 ; (js: `if (matrixGet(map...`) (js: `{        if (matr...`)
LD 1 0
LD 0 2
LD 2 11
AP 2
LD 2 7
AP 2
LDC 0 ; literal
CEQ
TSEL 1052 1076 ; if test
LD 2 50 ; (js: `if (matrixGet(map...`) (js: `{            if (...`)
LD 1 0
LD 0 3
LD 2 11
AP 2
LD 2 7
AP 2
LDC 0 ; literal
CEQ
TSEL 1062 1068 ; if test
LD 1 1 ; (js: `ds = [d, 0];`) (js: `{                ...`)
LDC 0 ; literal
CONS
ST 0 1
LDC 0 ; if-cons-jump
TSEL 1074 1074
LD 1 1 ; (js: `ds = [d, [dr, 0]];`) (js: `{                ...`)
LD 0 3
LDC 0 ; literal
CONS
CONS
ST 0 1
LDC 0 ; if-cons-jump
TSEL 1102 1102
LD 2 50 ; (js: `if (matrixGet(map...`) (js: `{            if (...`)
LD 1 0
LD 0 3
LD 2 11
AP 2
LD 2 7
AP 2
LDC 0 ; literal
CEQ
TSEL 1086 1094 ; if test
LD 1 1 ; (js: `ds = [d, [dl, 0]];`) (js: `{                ...`)
LD 0 2
LDC 0 ; literal
CONS
CONS
ST 0 1
LDC 0 ; if-cons-jump
TSEL 1102 1102
LD 1 1 ; (js: `ds = [d, [dl, [dr...`) (js: `{                ...`)
LD 0 2
LD 0 3
LDC 0 ; literal
CONS
CONS
CONS
ST 0 1
LD 0 0 ; (js: `if (typeof mz ===...`)
ATOM
TSEL 1105 1107 ; if test
LD 2 51 ; (js: `mz = _4FastList;`) (js: `{        mz = _4F...`)
ST 0 0
LD 0 0 ; (js: `mz = listSet(mz, ...`)
LD 1 1
LD 0 1
LD 2 1
AP 3
ST 0 0
LD 2 52 ; (js: `maze = matrixSet(...`)
LD 1 0
LD 0 0
LD 2 6
AP 3
ST 2 52
LDC 0 ; literal (js: `return 0;`)
RTN
LDC 0 ; init_ctx=0
LDF 1125
AP 1
RTN
LD 2 50 ; (js: `var cell = matrix...`) (js: `{    var cell = m...`)
LD 1 0
LD 2 7
AP 2
ST 0 0
LD 0 0 ; (js: `if (cell === 1 ||...`)
LDC 1 ; literal
CEQ
LD 0 0
LDC 5 ; literal
CEQ
ADD
LD 0 0
LDC 6 ; literal
CEQ
ADD
TSEL 1142 1144 ; if test
LDC 127 ; literal (js: `return 127;`)
RTN
LD 0 0 ; (js: `if (cell === 2 ||...`)
LDC 2 ; literal
CEQ
LD 0 0
LDC 3 ; literal
CEQ
ADD
LD 0 0
LDC 4 ; literal
CEQ
ADD
TSEL 1156 1158 ; if test
LDC 137 ; literal (js: `return 137;`)
RTN
LDC 0 ; literal (js: `return 0;`)
RTN
LDC 0 ; init_ctx=0
LDC 0 ; init_ctx=1
LDC 0 ; init_ctx=2
LDC 0 ; init_ctx=3
LDC 0 ; init_ctx=4
LDF 1168
AP 5
RTN
LDC 0 ; literal (js: `var x = 0;`) (js: `{    var x = 0;  ...`)
ST 0 0
LD 2 46 ; (js: `while (x < X) {  ...`)
LD 0 0
CGT
TSEL 1174 1245 ; while test
LDC 0 ; literal (js: `var y = 0;`) (js: `{        var y = ...`)
ST 0 1
LD 2 45 ; (js: `while (y < Y) {  ...`)
LD 0 1
CGT
TSEL 1180 1239 ; while test
LD 0 0 ; (js: `var pos = [x,y];`) (js: `{            var ...`)
LD 0 1
CONS
ST 0 2
LD 0 2 ; (js: `if (canGo(pos)) {...`)
LD 2 32
AP 1
TSEL 1188 1233 ; if test
LDC 0 ; literal (js: `var d = 0;`) (js: `{                ...`)
ST 0 3
LDC 4 ; literal (js: `while (d < 4) {  ...`)
LD 0 3
CGT
TSEL 1194 1233 ; while test
LD 0 2 ; (js: `var prevPos = shi...`) (js: `{                ...`)
LD 0 3
LD 2 28
AP 1
LD 2 11
AP 2
ST 0 4
LD 0 4 ; (js: `if (prevPos[0] >=...`)
CAR
LDC 0 ; literal
CGTE
LD 2 46
LD 0 4
CAR
CGT
MUL
LD 0 4
CDR
LDC 0 ; literal
CGTE
MUL
LD 2 45
LD 0 4
CDR
CGT
MUL
TSEL 1221 1227 ; if test
LD 0 2 ; (js: `setMazeCell(pos, d);`) (js: `{                ...`)
LD 0 3
LD 2 31
AP 2
ATOM
TSEL 1227 1227 ; cleanup
LD 0 3 ; (js: `d = d + 1;`)
LDC 1 ; literal
ADD
ST 0 3
LDC 0
TSEL 1190 1190
LD 0 1 ; (js: `y = y + 1;`)
LDC 1 ; literal
ADD
ST 0 1
LDC 0
TSEL 1176 1176
LD 0 0 ; (js: `x = x + 1;`)
LDC 1 ; literal
ADD
ST 0 0
LDC 0
TSEL 1170 1170
LDC 0 ; literal (js: `return 0;`)
RTN
LDC 0 ; init_ctx=0
LDC 0 ; init_ctx=1
LDC 0 ; init_ctx=2
LDC 0 ; init_ctx=3
LDC 0 ; init_ctx=4
LDC 0 ; init_ctx=5
LDC 0 ; init_ctx=6
LDC 0 ; init_ctx=7
LDC 0 ; init_ctx=8
LDC 0 ; init_ctx=9
LDC 0 ; init_ctx=10
LDC 0 ; init_ctx=11
LDC 0 ; init_ctx=12
LDC 0 ; init_ctx=13
LDC 0 ; init_ctx=14
LDC 0 ; init_ctx=15
LDC 0 ; init_ctx=16
LDC 0 ; init_ctx=17
LDF 1268
AP 18
RTN
LDF 1603 ; (js: `function bounty(c...`) (js: `{    worldState =...`)
ST 0 0
LDF 1675 ; (js: `function calcPath...`)
ST 0 1
LDF 1908 ; (js: `function calcSmel...`)
ST 0 2
LD 1 1 ; (js: `worldState = tplG...`)
LDC 4 ; literal
LD 2 24
AP 2
ST 1 1
LDC 1 ; literal (js: `var lmStatus = tp...`)
LD 1 1
AP 1
LDC 5 ; literal
LD 2 24
AP 2
ST 0 3
LDC 0 ; literal
LD 0 3
AP 1
ST 0 4
LDC 2 ; literal
LD 1 1
AP 1
ST 0 5
LDC 3 ; literal
LD 1 1
AP 1
ST 0 6
LD 2 49 ; (js: `var paths = empty...`)
ST 0 7
LDC 0 ; literal (js: `var flatPaths = 0;`)
ST 0 8
LD 2 47 ; (js: `var smell = empty...`)
ST 0 9
LDC 1 ; literal (js: `var myPos = lmSta...`)
LD 0 3
AP 1
ST 0 10
LD 0 10 ; (js: `var myOrigPos = m...`)
ST 0 11
LD 2 50 ; (js: `if (matrixGet(map...`)
LD 0 11
LD 2 7
AP 2
LDC 2 ; literal
CEQ
LD 2 50
LD 0 11
LD 2 7
AP 2
LDC 3 ; literal
CEQ
ADD
TSEL 1324 1330 ; if test
LD 2 50 ; (js: `map = matrixSet(m...`) (js: `{        map = ma...`)
LD 0 11
LDC 1 ; literal
LD 2 6
AP 3
ST 2 50
LD 0 1 ; (js: `calcPaths();`)
AP 0
ATOM
TSEL 1334 1334 ; cleanup
LD 0 2 ; (js: `calcSmell();`)
AP 0
ATOM
TSEL 1338 1338 ; cleanup
LDC 0 ; literal (js: `var d = 0;`)
ST 0 12
LDC 0 ; (js: `var bestSmell = -...`)
LDC 1000000000 ; literal
SUB
ST 0 13
LDC 0 ; literal (js: `var bestD = 0;`)
ST 0 14
LDC 4 ; literal (js: `while (d < 4) {  ...`)
LD 0 12
CGT
TSEL 1350 1389 ; while test
LD 0 11 ; (js: `var newPos = shif...`) (js: `{        var newP...`)
LD 0 12
LD 2 11
AP 2
ST 0 15
LD 0 9 ; (js: `var val = matrixG...`)
LD 0 15
LD 2 7
AP 2
ST 0 16
LD 0 15 ; (js: `if (canGo(newPos)...`)
LD 2 32
AP 1
LDC 0 ; literal
CGT
LD 0 16
LD 0 13
CGT
LD 0 16
LD 0 13
CEQ
LD 2 26
AP 0
LDC 16384 ; literal
CGT
MUL
ADD
MUL
TSEL 1379 1383 ; if test
LD 0 16 ; (js: `bestSmell = val;`) (js: `{            best...`)
ST 0 13
LD 0 12 ; (js: `bestD = d;`)
ST 0 14
LD 0 12 ; (js: `d = d + 1;`)
LDC 1 ; literal
ADD
ST 0 12
LDC 0
TSEL 1346 1346
LD 0 11 ; (js: `var bestPos = shi...`)
LD 0 14
LD 2 11
AP 2
ST 0 17
LD 0 7 ; (js: `return [[paths, [...`)
LD 0 9
LD 2 50
CONS
CONS
LD 0 14
CONS
RTN
LDC 0 ; init_ctx=0
LDC 0 ; init_ctx=1
LDC 0 ; init_ctx=2
LDF 1408
AP 3
RTN
LD 1 1 ; (js: `if (n === 1) {   ...`) (js: `{        if (n ==...`)
LDC 1 ; literal
CEQ
TSEL 1412 1421 ; if test
LD 1 0 ; (js: `return [f(arr[0],...`) (js: `{            retu...`)
CAR
LD 1 2
LD 3 1
AP 2
LD 1 0
CDR
CONS
RTN
LD 1 1 ; (js: `var m = (n / 2) | 0;`)
LDC 2 ; literal
DIV
ST 0 0
LD 1 0 ; (js: `var left = _listF...`)
LD 0 0
LD 1 2
LD 2 0
AP 3
ST 0 1
LD 0 1 ; (js: `var right = _list...`)
CDR
LD 1 1
LD 0 0
SUB
LD 1 2
LD 0 0
ADD
LD 2 0
AP 3
ST 0 2
LD 0 1 ; (js: `return [[left[0],...`)
CAR
LD 0 2
CAR
CONS
LD 0 2
CDR
CONS
RTN
LDC 0 ; init_ctx=0
LDF 1455
AP 1
RTN
LD 1 1 ; (js: `if(length === 1) ...`) (js: `{        if(lengt...`)
LDC 1 ; literal
CEQ
TSEL 1459 1467 ; if test
LD 1 0 ; (js: `f(list, i);`) (js: `{            f(li...`)
LD 1 2
LD 3 1
AP 2
ATOM
TSEL 1465 1465 ; cleanup
LDC 0 ; if-cons-jump
TSEL 1491 1491
LD 1 1 ; (js: `var halfLength = ...`) (js: `{            var ...`)
LDC 2 ; literal
DIV
ST 0 0
LD 1 0 ; (js: `_listIterate(list...`)
CAR
LD 0 0
LD 1 2
LD 2 0
AP 3
ATOM
TSEL 1479 1479 ; cleanup
LD 1 0 ; (js: `_listIterate(list...`)
CDR
LD 1 1
LD 0 0
SUB
LD 1 2
LD 0 0
ADD
LD 2 0
AP 3
ATOM
TSEL 1491 1491 ; cleanup
RTN
LDC 0 ; init_ctx=0
LDF 1496
AP 1
RTN
LDF 2026 ; (js: `function cellIter...`) (js: `{        function...`)
ST 0 0
LD 1 0 ; (js: `listIterate(row, ...`)
LD 0 0
LD 4 5
AP 2
ATOM
TSEL 1504 1504 ; cleanup
RTN
LDC 0 ; init_ctx=0
LDF 1509
AP 1
RTN
LD 1 0 ; (js: `if (n === 1)     ...`) (js: `{        if (n ==...`)
LDC 1 ; literal
CEQ
TSEL 1513 1516 ; if test
LD 3 1 ; (js: `return f();`)
AP 0
RTN
LD 1 0 ; (js: `var m = (n / 2) | 0;`)
LDC 2 ; literal
DIV
ST 0 0
LD 0 0 ; (js: `return [ _genList...`)
LD 2 0
AP 1
LD 1 0
LD 0 0
SUB
LD 2 0
AP 1
CONS
RTN
LD 2 0 ; (js: `return genList(X,...`) (js: `{        return g...`)
LD 2 2
LD 3 9
AP 2
RTN
LDC 0 ; init_ctx=0
LDF 1539
AP 1
RTN
LD 1 2 ; (js: `if (n === 1) {   ...`) (js: `{        if (n ==...`)
LDC 1 ; literal
CEQ
TSEL 1543 1549 ; if test
LD 1 1 ; (js: `return f(x, row, a);`) (js: `{            retu...`)
LD 1 0
LD 1 3
LD 3 1
AP 3
RTN
LD 1 2 ; (js: `var m = (n / 2) | 0;`)
LDC 2 ; literal
DIV
ST 0 0
LD 1 0 ; (js: `a = _flatRow(row[...`)
CDR
LD 1 1
LD 0 0
ADD
LD 1 2
LD 0 0
SUB
LD 1 3
LD 2 0
AP 4
ST 1 3
LD 1 0 ; (js: `return _flatRow(r...`)
CAR
LD 1 1
LD 0 0
LD 1 3
LD 2 0
AP 4
RTN
LDC 0 ; init_ctx=0
LDF 1577
AP 1
RTN
LDF 2034 ; (js: `function processC...`) (js: `{        function...`)
ST 0 0
LD 1 1 ; (js: `return flatRow(d,...`)
LD 0 0
LD 1 2
LD 4 16
AP 3
RTN
LD 2 0 ; (js: `return tplGet(tpl...`) (js: `{        return t...`)
LD 2 1
LD 0 0
LD 3 23
AP 3
RTN
LD 0 0 ; (js: `if (x === 6) {   ...`) (js: `{    if (x === 6)...`)
LDC 6 ; literal
CEQ
TSEL 1595 1601 ; if test
LD 0 1 ; (js: `ghostsStartingPos...`) (js: `{        ghostsSt...`)
LD 2 1
CONS
LD 3 44
CONS
ST 3 44
LD 0 0 ; (js: `return x;`)
RTN
LDC 0 ; init_ctx=0
LDF 1607
AP 1
RTN
LD 1 0 ; (js: `if (cell === 2) {...`) (js: `{        var b;  ...`)
LDC 2 ; literal
CEQ
TSEL 1611 1615 ; if test
LDC 100 ; literal (js: `b = 100;`) (js: `{            b = ...`)
ST 0 0
LDC 0 ; if-cons-jump
TSEL 1667 1667
LD 1 0 ; (js: `if (cell === 3) {...`)
LDC 3 ; literal
CEQ
TSEL 1619 1635 ; if test
LD 2 6 ; (js: `if (fruitStatus >...`) (js: `{            if (...`)
LDC 0 ; literal
CGT
LD 1 1
LD 2 4
CGT
MUL
TSEL 1627 1631 ; if test
LDC 10000 ; literal (js: `b = 10000;`) (js: `{                ...`)
ST 0 0
LDC 0 ; if-cons-jump
TSEL 1633 1633
LDC 10 ; literal (js: `b = 10;`) (js: `{                ...`)
ST 0 0
LDC 0 ; if-cons-jump
TSEL 1667 1667
LD 1 0 ; (js: `if (cell === 4 &&...`)
LDC 4 ; literal
CEQ
LD 2 6
LD 1 1
CGT
MUL
TSEL 1643 1647 ; if test
LDC 10000 ; literal (js: `b = 10000;`) (js: `{            b = ...`)
ST 0 0
LDC 0 ; if-cons-jump
TSEL 1667 1667
LD 1 0 ; (js: `if (cell === 7) {...`)
LDC 7 ; literal
CEQ
TSEL 1651 1655 ; if test
LDC 10000 ; literal (js: `b = 10000;`) (js: `{            b = ...`)
ST 0 0
LDC 0 ; if-cons-jump
TSEL 1667 1667
LD 1 0 ; (js: `if (cell === 8) {...`)
LDC 8 ; literal
CEQ
TSEL 1659 1665 ; if test
LDC 0 ; (js: `b = -10;`) (js: `{            b = ...`)
LDC 10 ; literal
SUB
ST 0 0
LDC 0 ; if-cons-jump
TSEL 1667 1667
LDC 1 ; literal (js: `b = 1;`) (js: `{            b = ...`)
ST 0 0
LD 0 0 ; (js: `return ((b * 1000...`)
LDC 100000 ; literal
MUL
LD 1 1
LDC 1 ; literal
ADD
DIV
RTN
LDC 0 ; init_ctx=0
LDC 0 ; init_ctx=1
LDC 0 ; init_ctx=2
LDC 0 ; init_ctx=3
LDC 0 ; init_ctx=4
LDC 0 ; init_ctx=5
LDC 0 ; init_ctx=6
LDC 0 ; init_ctx=7
LDC 0 ; init_ctx=8
LDC 0 ; init_ctx=9
LDC 0 ; init_ctx=10
LDC 0 ; init_ctx=11
LDC 0 ; init_ctx=12
LDC 0 ; init_ctx=13
LDC 0 ; init_ctx=14
LDC 0 ; init_ctx=15
LDC 0 ; init_ctx=16
LDC 0 ; init_ctx=17
LDC 0 ; init_ctx=18
LDF 1697
AP 19
RTN
LDF 2051 ; (js: `function prepareG...`) (js: `{        paths = ...`)
ST 0 0
LD 2 7 ; (js: `paths = matrixSet...`)
LD 2 10
LDC 0 ; literal
LD 4 6
AP 3
ST 2 7
LDC 0 ; literal (js: `flatPaths = [[0, ...`)
LD 2 10
CONS
LD 2 8
CONS
ST 2 8
LDC 0 ; literal (js: `var toDo = 0;`)
ST 0 2
LD 2 5 ; (js: `var ghs = prepare...`)
LD 0 0
AP 1
ST 0 3
LD 2 4 ; (js: `var myStatus = [l...`)
LDC 0 ; literal
CONS
ST 0 4
LD 2 10 ; (js: `var state = [myPo...`)
LD 0 3
LD 0 4
CONS
CONS
ST 0 5
LD 0 2 ; (js: `toDo = heapPush(t...`)
LDC 0 ; literal
LD 0 5
CONS
LD 4 14
AP 2
ST 0 2
LDC 0 ; literal (js: `var heapOps = 0;`)
ST 0 6
LD 0 2 ; (js: `while (heapSize(t...`)
LD 4 13
AP 1
LDC 0 ; literal
CGT
LDC 180 ; literal
LD 0 6
CGT
MUL
TSEL 1746 1904 ; while test
LD 0 6 ; (js: `heapOps = heapOps...`) (js: `{            heap...`)
LDC 1 ; literal
ADD
ST 0 6
LD 0 2 ; (js: `var popRes = heap...`)
LD 4 12
AP 1
ST 0 7
LD 0 7 ; (js: `var state = popRe...`)
CAR
ST 0 5
LD 0 5 ; (js: `var t = state[0];`)
CAR
ST 0 8
LD 0 5 ; (js: `state = state[1];`)
CDR
ST 0 5
LD 0 5 ; (js: `myPos = state[0];`)
CAR
ST 2 10
LD 0 5 ; (js: `state = state[1];`)
CDR
ST 0 5
LD 0 5 ; (js: `ghs = state[0];`)
CAR
ST 0 3
LD 0 5 ; (js: `myStatus = state[1];`)
CDR
ST 0 4
LD 0 4 ; (js: `var myVitality = ...`)
CAR
ST 0 9
LD 0 7 ; (js: `toDo = popRes[1];`)
CDR
ST 0 2
LDC 0 ; literal (js: `var d = 0;`)
ST 0 10
LDC 4 ; literal (js: `while (d < 4) {  ...`)
LD 0 10
CGT
TSEL 1787 1902 ; while test
LD 2 10 ; (js: `var newPos = shif...`) (js: `{                ...`)
LD 0 10
LD 4 11
AP 2
ST 0 11
LD 0 11 ; (js: `var dt = canGo(ne...`)
LD 4 32
AP 1
ST 0 12
LD 0 12 ; (js: `if (dt > 0 && mat...`)
LDC 0 ; literal
CGT
LD 2 7
LD 0 11
LD 4 7
AP 2
LDC 0 ; literal
CEQ
MUL
TSEL 1807 1896 ; if test
LDF 2067 ; (js: `function updateGh...`) (js: `{                ...`)
ST 0 1
LDC 0 ; literal (js: `var frighten = 0;`)
ST 0 13
LD 0 9 ; (js: `var myNewVitality...`)
ST 0 14
LD 4 50 ; (js: `if (matrixGet(map...`)
LD 0 11
LD 4 7
AP 2
LDC 3 ; literal
CEQ
TSEL 1820 1830 ; if test
LD 0 9 ; (js: `if (!myVitality) ...`) (js: `{                ...`)
LDC 0
CEQ
TSEL 1824 1826 ; if test
LDC 1 ; literal (js: `frighten = 1;`) (js: `{                ...`)
ST 0 13
LDC 127 ; literal (js: `myNewVitality = 1...`)
LDC 20 ; literal
MUL
ST 0 14
LDC 1 ; literal (js: `var alive = 1;`)
ST 0 15
LDC 0 ; literal (js: `var scoreBonus = 0;`)
ST 0 16
LD 0 3 ; (js: `var newGhs = slow...`)
LD 0 1
LD 4 27
AP 2
ST 0 17
LD 0 16 ; (js: `if (scoreBonus) {...`)
TSEL 1841 1847 ; if test
LD 2 9 ; (js: `smell = matrixSet...`) (js: `{                ...`)
LD 0 11
LD 0 16
LD 4 6
AP 3
ST 2 9
LD 2 7 ; (js: `paths = matrixSet...`)
LD 0 11
LD 0 8
LD 0 12
ADD
LD 4 6
AP 3
ST 2 7
LD 0 8 ; (js: `flatPaths = [[t +...`)
LD 0 12
ADD
LD 0 11
CONS
LD 2 8
CONS
ST 2 8
LD 0 15 ; (js: `if (alive) {     ...`)
TSEL 1865 1894 ; if test
LD 0 14 ; (js: `myNewVitality = m...`) (js: `{                ...`)
LD 0 12
SUB
ST 0 14
LDC 0 ; literal (js: `if (myNewVitality...`)
LD 0 14
CGT
TSEL 1873 1875 ; if test
LDC 0 ; literal (js: `myNewVitality = 0;`)
ST 0 14
LD 0 14 ; (js: `var myNewStatus =...`)
LDC 0 ; literal
CONS
ST 0 18
LD 0 2 ; (js: `toDo = heapPush(t...`)
LD 0 8
LD 0 12
ADD
LD 0 11
LD 0 17
LD 0 18
CONS
CONS
CONS
LD 4 14
AP 2
ST 0 2
LDC 0 ; if-cons-jump
TSEL 1896 1896
LDC 1 ; literal (js: `alive = 1;`) (js: `{                ...`)
ST 0 15
LD 0 10 ; (js: `d = d + 1;`)
LDC 1 ; literal
ADD
ST 0 10
LDC 0
TSEL 1783 1783
LDC 0
TSEL 1736 1736
LD 0 6 ; (js: `console.log(heapO...`)
DBUG
LDC 0 ; literal (js: `return 0;`)
RTN
LDC 0 ; init_ctx=0
LDC 0 ; init_ctx=1
LDC 0 ; init_ctx=2
LDC 0 ; init_ctx=3
LDC 0 ; init_ctx=4
LDC 0 ; init_ctx=5
LDC 0 ; init_ctx=6
LDC 0 ; init_ctx=7
LDC 0 ; init_ctx=8
LDC 0 ; init_ctx=9
LDF 1921
AP 10
RTN
LD 2 8 ; (js: `var sortedPaths =...`) (js: `{        var sort...`)
LD 4 15
AP 1
ST 0 0
LD 0 0 ; (js: `while (typeof sor...`)
ATOM
LDC 0
CEQ
TSEL 1930 2024 ; while test
LD 0 0 ; (js: `var pos = sortedP...`) (js: `{            var ...`)
CAR
CDR
ST 0 1
LD 2 7 ; (js: `var t0 = matrixGe...`)
LD 0 1
LD 4 7
AP 2
ST 0 2
LD 4 50 ; (js: `var cell = matrix...`)
LD 0 1
LD 4 7
AP 2
ST 0 3
LD 2 9 ; (js: `var myVal = matri...`)
LD 0 1
LD 4 7
AP 2
LD 0 3
LD 0 2
LD 2 0
AP 2
ADD
ST 0 4
LD 2 9 ; (js: `smell = matrixSet...`)
LD 0 1
LD 0 4
LD 4 6
AP 3
ST 2 9
LDC 0 ; literal (js: `var d = 0;`)
ST 0 5
LDC 4 ; literal (js: `while (d < 4) {  ...`)
LD 0 5
CGT
TSEL 1966 2019 ; while test
LD 0 1 ; (js: `var newPos = shif...`) (js: `{                ...`)
LD 0 5
LD 4 11
AP 2
ST 0 6
LD 0 6 ; (js: `if (canGo(newPos)...`)
LD 4 32
AP 1
TSEL 1975 2013 ; if test
LD 2 7 ; (js: `var t = matrixGet...`) (js: `{                ...`)
LD 0 6
LD 4 7
AP 2
ST 0 7
LD 0 7 ; (js: `if (t === t0 - 12...`)
LD 0 2
LDC 127 ; literal
SUB
CEQ
LD 0 7
LD 0 2
LDC 137 ; literal
SUB
CEQ
ADD
TSEL 1992 2013 ; if test
LD 0 4 ; (js: `var newVal = myVal;`) (js: `{                ...`)
ST 0 8
LD 2 9 ; (js: `var oldVal = matr...`)
LD 0 6
LD 4 7
AP 2
ST 0 9
LD 0 9 ; (js: `if (oldVal === 0 ...`)
LDC 0 ; literal
CEQ
LD 0 8
LD 0 9
CGT
ADD
TSEL 2007 2013 ; if test
LD 2 9 ; (js: `smell = matrixSet...`) (js: `{                ...`)
LD 0 6
LD 0 8
LD 4 6
AP 3
ST 2 9
LD 0 5 ; (js: `d = d + 1;`)
LDC 1 ; literal
ADD
ST 0 5
LDC 0
TSEL 1962 1962
LD 0 0 ; (js: `sortedPaths = sor...`)
CDR
ST 0 0
LDC 0
TSEL 1925 1925
LDC 0 ; literal (js: `return 0;`)
RTN
LD 0 0 ; (js: `f(v, i, j);`) (js: `{            f(v,...`)
LD 2 1
LD 0 1
LD 4 1
AP 3
ATOM
TSEL 2033 2033 ; cleanup
RTN
LD 0 1 ; (js: `if (r >= 0) {    ...`) (js: `{            if (...`)
LDC 0 ; literal
CGTE
TSEL 2038 2048 ; if test
LD 0 1 ; (js: `return [[r, [x, y...`) (js: `{                ...`)
LD 0 0
LD 2 0
CONS
CONS
LD 0 2
CONS
RTN
LDC 0 ; if-cons-jump
TSEL 2050 2050
LD 0 2 ; (js: `return tail;`) (js: `{                ...`)
RTN
RTN
LDC 0 ; init_ctx=0
LDC 0 ; init_ctx=1
LDF 2056
AP 2
RTN
LDF 2187 ; (js: `function prepareG...`) (js: `{            var ...`)
ST 0 0
LDC 0 ; (js: `var id = -1;`)
LDC 1 ; literal
SUB
ST 0 1
LD 4 5 ; (js: `return slowListMa...`)
LD 0 0
LD 6 27
AP 2
RTN
LDC 0 ; init_ctx=0
LDC 0 ; init_ctx=1
LDC 0 ; init_ctx=2
LDC 0 ; init_ctx=3
LDC 0 ; init_ctx=4
LDC 0 ; init_ctx=5
LDC 0 ; init_ctx=6
LDC 0 ; init_ctx=7
LDC 0 ; init_ctx=8
LDC 0 ; init_ctx=9
LDC 0 ; init_ctx=10
LDF 2081
AP 11
RTN
LDF 2197 ; (js: `function handleCo...`) (js: `{                ...`)
ST 0 0
LDF 2244 ; (js: `function ghostStr...`)
ST 0 1
LDF 2381 ; (js: `function findGhos...`)
ST 0 2
LDF 2437 ; (js: `function handleMo...`)
ST 0 3
LD 1 0 ; (js: `var gi = state[0];`)
CAR
ST 0 4
LD 1 0 ; (js: `state = state[1];`)
CDR
ST 1 0
LD 1 0 ; (js: `var gt = state[0];`)
CAR
ST 0 5
LD 1 0 ; (js: `state = state[1];`)
CDR
ST 1 0
LD 1 0 ; (js: `var vit = state[0];`)
CAR
ST 0 6
LD 1 0 ; (js: `state = state[1];`)
CDR
ST 1 0
LD 1 0 ; (js: `var pos = state[0];`)
CAR
ST 0 7
LD 1 0 ; (js: `var d = state[1];`)
CDR
ST 0 8
LD 2 13 ; (js: `if (frighten) {  ...`)
TSEL 2115 2123 ; if test
LDC 1 ; literal (js: `vit = 1;`) (js: `{                ...`)
ST 0 6
LD 0 8 ; (js: `d = oppositeDir(d);`)
LD 6 28
AP 1
ST 0 8
LDC 0 ; if-cons-jump
TSEL 2131 2131
LD 0 6 ; (js: `if (vit && myNewV...`)
LD 2 14
LDC 0 ; literal
CEQ
MUL
TSEL 2129 2131 ; if test
LDC 0 ; literal (js: `vit = 0;`) (js: `{                ...`)
ST 0 6
LD 0 0 ; (js: `handleCollision();`)
AP 0
ATOM
TSEL 2135 2135 ; cleanup
LD 2 8 ; (js: `if (gt < t + dt) ...`)
LD 2 12
ADD
LD 0 5
CGT
TSEL 2141 2177 ; if test
LD 0 3 ; (js: `handleMove();`) (js: `{                ...`)
AP 0
ATOM
TSEL 2145 2145 ; cleanup
LD 0 4 ; (js: `var gn = gi;`)
ST 0 9
LD 0 9 ; (js: `while(gn > 4) gn ...`)
LDC 4 ; literal
CGT
TSEL 2151 2157 ; while test
LD 0 9 ; (js: `gn = gn - 4;`)
LDC 4 ; literal
SUB
ST 0 9
LDC 0
TSEL 2147 2147
LD 0 6 ; (js: `if (vit) { // fri...`)
TSEL 2159 2167 ; if test
LDC 195 ; literal (js: `gdt = 195 + (gn *...`) (js: `{ // frightened o...`)
LD 0 9
LDC 3 ; literal
MUL
ADD
ST 0 10
LDC 0 ; if-cons-jump
TSEL 2173 2173
LDC 130 ; literal (js: `gdt = 130 + (gn *...`) (js: `{                ...`)
LD 0 9
LDC 2 ; literal
MUL
ADD
ST 0 10
LD 0 5 ; (js: `gt = gt + gdt;`)
LD 0 10
ADD
ST 0 5
LD 0 4 ; (js: `return [gi, [gt, ...`)
LD 0 5
LD 0 6
LD 0 7
LD 0 8
CONS
CONS
CONS
CONS
RTN
LD 1 1 ; (js: `id = id + 1;`) (js: `{                ...`)
LDC 1 ; literal
ADD
ST 1 1
LD 1 1 ; (js: `return [id, [1, g...`)
LDC 1 ; literal
LD 0 0
CONS
CONS
RTN
LD 1 7 ; (js: `if (pos[0] === ne...`) (js: `{                ...`)
CAR
LD 3 11
CAR
CEQ
LD 1 7
CDR
LD 3 11
CDR
CEQ
MUL
TSEL 2209 2242 ; if test
LD 1 6 ; (js: `if (vit === 0) { ...`) (js: `{                ...`)
LDC 0 ; literal
CEQ
TSEL 2213 2222 ; if test
LDC 0 ; literal (js: `alive = 0;`) (js: `{                ...`)
ST 3 15
LDC 8 ; literal (js: `scoreBonus = boun...`)
LD 3 8
LD 5 0
AP 2
ST 3 16
LDC 0 ; if-cons-jump
TSEL 2242 2242
LD 1 6 ; (js: `if (vit === 1) { ...`)
LDC 1 ; literal
CEQ
TSEL 2226 2242 ; if test
LD 7 44 ; (js: `pos = listGet(gho...`) (js: `{                ...`)
LD 1 4
LD 7 0
AP 2
ST 1 7
LDC 2 ; literal (js: `vit = 2;`)
ST 1 6
LDC 2 ; literal (js: `d = 2;`)
ST 1 8
LD 3 16 ; (js: `scoreBonus = scor...`)
LDC 7 ; literal
LD 3 8
LD 5 0
AP 2
ADD
ST 3 16
LDC 0 ; literal (js: `return 0;`)
RTN
LDC 0 ; init_ctx=0
LDC 0 ; init_ctx=1
LDC 0 ; init_ctx=2
LDC 0 ; init_ctx=3
LDC 0 ; init_ctx=4
LDC 0 ; init_ctx=5
LDF 2253
AP 6
RTN
LDC 0 ; literal (js: `d = shiftDir([0,0...`) (js: `{                ...`)
LDC 0 ; literal
CONS
LD 1 0
LD 8 11
AP 2
ST 1 0
LD 1 0 ; (js: `var dx = d[0];`)
CAR
ST 0 0
LD 1 0 ; (js: `var dy = d[1];`)
CDR
ST 0 1
LD 4 11 ; (js: `var dX = newPos[0...`)
CAR
LD 2 7
CAR
SUB
ST 0 2
LD 4 11 ; (js: `var dY = newPos[1...`)
CDR
LD 2 7
CDR
SUB
ST 0 3
LDC 0 ; literal (js: `if (dX < 0) {    ...`)
LD 0 2
CGT
TSEL 2282 2290 ; if test
LDC 0 ; literal (js: `dX = 0 - dX;`) (js: `{                ...`)
LD 0 2
SUB
ST 0 2
LDC 0 ; literal (js: `dx = 0 - dx;`)
LD 0 0
SUB
ST 0 0
LDC 0 ; literal (js: `if (dY < 0) {    ...`)
LD 0 3
CGT
TSEL 2294 2302 ; if test
LDC 0 ; literal (js: `dY = 0 - dY;`) (js: `{                ...`)
LD 0 3
SUB
ST 0 3
LDC 0 ; literal (js: `dy = 0 - dy;`)
LD 0 1
SUB
ST 0 1
LD 0 3 ; (js: `if (dX < dY) {   ...`)
LD 0 2
CGT
TSEL 2306 2338 ; if test
LD 0 1 ; (js: `if (dy > 0) {    ...`) (js: `{                ...`)
LDC 0 ; literal
CGT
TSEL 2310 2314 ; if test
LDC 2 ; literal (js: `s = 2;`) (js: `{                ...`)
ST 0 5
LDC 0 ; if-cons-jump
TSEL 2336 2336
LD 0 0 ; (js: `if (dx > 0) {    ...`)
LDC 0 ; literal
CGT
TSEL 2318 2322 ; if test
LDC 1 ; literal (js: `s = 1;`) (js: `{                ...`)
ST 0 5
LDC 0 ; if-cons-jump
TSEL 2336 2336
LDC 0 ; literal (js: `if (dx < 0) {    ...`)
LD 0 0
CGT
TSEL 2326 2332 ; if test
LDC 0 ; (js: `s = -1;`) (js: `{                ...`)
LDC 1 ; literal
SUB
ST 0 5
LDC 0 ; if-cons-jump
TSEL 2336 2336
LDC 0 ; (js: `s = -2;`) (js: `{                ...`)
LDC 2 ; literal
SUB
ST 0 5
LDC 0 ; if-cons-jump
TSEL 2368 2368
LD 0 0 ; (js: `if (dx > 0) {    ...`) (js: `{                ...`)
LDC 0 ; literal
CGT
TSEL 2342 2346 ; if test
LDC 2 ; literal (js: `s = 2;`) (js: `{                ...`)
ST 0 5
LDC 0 ; if-cons-jump
TSEL 2368 2368
LD 0 1 ; (js: `if (dy > 0) {    ...`)
LDC 0 ; literal
CGT
TSEL 2350 2354 ; if test
LDC 1 ; literal (js: `s = 1;`) (js: `{                ...`)
ST 0 5
LDC 0 ; if-cons-jump
TSEL 2368 2368
LDC 0 ; literal (js: `if (dy < 0) {    ...`)
LD 0 1
CGT
TSEL 2358 2364 ; if test
LDC 0 ; (js: `s = -1;`) (js: `{                ...`)
LDC 1 ; literal
SUB
ST 0 5
LDC 0 ; if-cons-jump
TSEL 2368 2368
LDC 0 ; (js: `s = -2;`) (js: `{                ...`)
LDC 2 ; literal
SUB
ST 0 5
LD 2 6 ; (js: `if (vit === 1) { ...`)
LDC 1 ; literal
CEQ
TSEL 2372 2378 ; if test
LDC 0 ; literal (js: `return 0 - s;`) (js: `{                ...`)
LD 0 5
SUB
RTN
LDC 0 ; if-cons-jump
TSEL 2380 2380
LD 0 5 ; (js: `return s;`) (js: `{                ...`)
RTN
RTN
LDC 0 ; init_ctx=0
LDC 0 ; init_ctx=1
LDC 0 ; init_ctx=2
LDC 0 ; init_ctx=3
LDF 2388
AP 4
RTN
LD 1 0 ; (js: `if (typeof ds[1] ...`) (js: `{                ...`)
CDR
ATOM
TSEL 2392 2395 ; if test
LD 1 0 ; (js: `return ds[0];`) (js: `{                ...`)
CAR
RTN
LDC 0 ; literal (js: `var bestD = 0;`)
ST 0 0
LDC 0 ; (js: `var bestScore = -3;`)
LDC 3 ; literal
SUB
ST 0 1
LD 1 0 ; (js: `while (typeof ds ...`)
ATOM
LDC 0
CEQ
TSEL 2406 2435 ; while test
LD 1 0 ; (js: `var d = ds[0];`) (js: `{                ...`)
CAR
ST 0 2
LD 0 2 ; (js: `var val = ghostSt...`)
LD 2 1
AP 1
ST 0 3
LD 0 3 ; (js: `if (val > bestSco...`)
LD 0 1
CGT
LD 0 3
LD 0 1
CEQ
LD 8 26
AP 0
LDC 16384 ; literal
CGT
MUL
ADD
TSEL 2426 2430 ; if test
LD 0 2 ; (js: `bestD = d;`) (js: `{                ...`)
ST 0 0
LD 0 3 ; (js: `bestScore = val;`)
ST 0 1
LD 1 0 ; (js: `ds = ds[1];`)
CDR
ST 1 0
LDC 0
TSEL 2401 2401
LD 0 0 ; (js: `return bestD;`)
RTN
LDC 0 ; init_ctx=0
LDC 0 ; init_ctx=1
LDF 2442
AP 2
RTN
LD 8 52 ; (js: `var mz = matrixGe...`) (js: `{                ...`)
LD 2 7
LD 8 7
AP 2
ST 0 0
LD 0 0 ; (js: `var ds = listGet(...`)
LD 2 8
LD 8 0
AP 2
ST 0 1
LD 0 1 ; (js: `d = findGhostStra...`)
LD 2 2
AP 1
ST 2 8
LD 2 7 ; (js: `pos = shiftDir(po...`)
LD 2 8
LD 8 11
AP 2
ST 2 7
LD 2 0 ; (js: `handleCollision();`)
AP 0
ATOM
TSEL 2465 2465 ; cleanup
LDC 0 ; literal (js: `return 0;`)
RTN
